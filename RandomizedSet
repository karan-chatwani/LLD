 class RandomizedSet {
    vector<int> v;
    unordered_map<int,int> m;
public:
    RandomizedSet() {
        v.clear();
        m.clear();
    }
    
    bool insert(int val) {
       if(m.find(val)!=m.end()) return false;
       v.push_back(val);
       m[val]=v.size()-1;
       return true; 
    }
    
    bool remove(int val) {
        if(m.find(val)==m.end()) return false;
        int pos=m[val];
        int lastElement=v[v.size()-1];
        swap(v[pos],v[v.size()-1]);
        v.pop_back();
        m.erase(val);
        if(lastElement!=val)
        m[lastElement]=pos;
        return true;
    }
    
    int getRandom() {

        int ind=rand()%v.size();
        return v[ind];
    }
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */
